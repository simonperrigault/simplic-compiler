aspect MinValue {
    // Exercise 1
    syn int Node.localMin();
    eq Leaf.localMin() = getNumber();
    eq Pair.localMin() {
        return Math.min(getLeft().localMin(), getRight().localMin());
    }

    // Exercise 2
    inh int Node.globalMin();
    eq Program.getNode().globalMin() = getNode().localMin();

    // Exercise 3
    syn boolean Leaf.isMinValue() {
        return localMin() == globalMin();
    }
    
    // Exercise 4
    syn int Program.nbrOfMinValues() = getNode().nbrOfMinValues();
    syn int Node.nbrOfMinValues();
    eq Leaf.nbrOfMinValues() {
        if (isMinValue()) {
            return 1;
        }
        return 0;
    }
    eq Pair.nbrOfMinValues() = getLeft().nbrOfMinValues() + getRight().nbrOfMinValues();
}
